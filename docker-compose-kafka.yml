version: '2.1'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper:/var/lib/zookeeper
    networks:
      - reactnet

  kafka:
    image: confluentinc/cp-kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - kafka:/var/lib/kafka
    networks:
      - reactnet
    links:
      - zookeeper
    depends_on:
      - zookeeper

  ksql-server:
    image: xmlking/ksql
    ports:
      - 9098:9098
    networks:
      - reactnet
    links:
      - kafka
    depends_on:
      - kafka
#    volumes:
#      - ./infra/kafka/ksql/:/etc/ksql/
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j.properties"
      STREAMS_BOOTSTRAP_SERVERS: kafka:9092
#      STREAMS_BOOTSTRAP_SERVERS: 10.205.105.157:10040,10.205.105.152:9136,10.205.105.156:9129
    entrypoint: 'ksql-server-start'

networks:
  reactnet:
    driver: bridge

volumes:
  zookeeper:
  kafka:
