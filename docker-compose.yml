version: '2.1'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper:/var/lib/zookeeper
    networks:
      - reactnet

  kafka:
    image: confluentinc/cp-kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - kafka:/var/lib/kafka
    networks:
      - reactnet
    links:
      - zookeeper
    depends_on:
      - zookeeper

  cassandra:
    image: cassandra:latest
    networks:
      - reactnet
    volumes:
      - cassandra:/var/lib/cassandra
#      - ${PWD}/infra/cassandra/data:/var/lib/cassandra
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 30s
      timeout: 10s
      retries: 5

  capi:
    image: microservices-observability/cassandra-data-service:0.1.0-SNAPSHOT
    ports:
      - 8081:8080
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - reactnet
    links:
      - cassandra
      - kafka
    depends_on:
      cassandra:
        condition: service_healthy

  stream:
    image: microservices-observability/stream-service:0.1.0-SNAPSHOT
    ports:
      - 8082:8080
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - reactnet
    links:
      - kafka
    depends_on:
      - kafka

  app:
    image: microservices-observability/ui-app:0.1.0-SNAPSHOT
    ports:
      - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CASSANDRA_API_URL=http://capi:8080
      - STREAM_API_URL=http://stream:8080
    networks:
      - reactnet
    links:
      - kafka
      - capi
      - stream
    depends_on:
      - kafka
      - capi
      - stream

networks:
  reactnet:
    driver: bridge

volumes:
  cassandra:
    driver: local
  zookeeper:
  kafka:
